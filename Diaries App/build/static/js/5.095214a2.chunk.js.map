{"version":3,"sources":["services/api.ts","util.ts","images/user_status_isometric.png","images/user_profile_isometric.png","features/auth/Auth.tsx"],"names":["http","axios","create","baseURL","defaults","headers","post","interceptors","response","use","a","status","data","error","request","showAlert","message","Promise","reject","titleText","alertType","Swal","fire","position","timer","timerProgressBar","toast","showConfirmButton","showCancelButton","cancelButtonText","icon","showClass","popup","backdrop","hideClass","module","exports","schema","Yup","shape","username","required","max","password","email","Auth","useForm","validationSchema","handleSubmit","register","errors","useState","isLogin","setIsLogin","loading","setLoading","dispatch","useAppDispatch","className","onSubmit","path","then","res","user","token","saveToken","setUser","setAuthState","catch","console","log","finally","src","Login","alt","Signup","ref","name","placeholder","type","disabled","onClick","style","cursor","opacity","color","fontWeight","borderLeft","borderRight","fontSize"],"mappings":"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","file":"static/js/5.095214a2.chunk.js","sourcesContent":["import axios, { AxiosInstance, AxiosResponse, AxiosError } from 'axios';\r\nimport { showAlert } from '../util';\r\n\r\nconst http: AxiosInstance = axios.create({\r\n  baseURL: 'https://diaries.app',\r\n});\r\n\r\nhttp.defaults.headers.post['Content-Type'] = 'application/json';\r\n\r\nhttp.interceptors.response.use(\r\n  async (response: AxiosResponse): Promise<any> => {\r\n    if (response.status >= 200 && response.status < 300) {\r\n      return response.data;\r\n    }\r\n  },\r\n  (error: AxiosError) => {\r\n    const {\r\n      response,\r\n      request,\r\n    }: { response?: AxiosResponse; request?: XMLHttpRequest } = error;\r\n    if (response) {\r\n      if (response.status >= 400 && response.status < 500) {\r\n        showAlert(response.data?.data?.message, 'error');\r\n        return null;\r\n      }\r\n    } else if (request) {\r\n      showAlert('Request failed. Please try again.', 'error');\r\n      return null;\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default http;\r\n","import Swal, { SweetAlertIcon } from 'sweetalert2';\r\n\r\nexport const showAlert = (\r\n  titleText = 'Something happened.',\r\n  alertType?: SweetAlertIcon\r\n): void => {\r\n  Swal.fire({\r\n    titleText,\r\n    position: 'top-end',\r\n    timer: 3000,\r\n    timerProgressBar: true,\r\n    toast: true,\r\n    showConfirmButton: false,\r\n    showCancelButton: true,\r\n    cancelButtonText: 'Dismiss',\r\n    icon: alertType,\r\n    showClass: {\r\n      popup: 'swal2-noanimation',\r\n      backdrop: 'swal2-noanimation',\r\n    },\r\n    hideClass: {\r\n      popup: '',\r\n      backdrop: '',\r\n    },\r\n  });\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/user_status_isometric.c2484459.png\";","module.exports = __webpack_public_path__ + \"static/media/user_profile_isometric.0f4cc6d7.png\";","import React, { FC, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { User } from '../../interfaces/user.interface';\r\nimport * as Yup from 'yup';\r\nimport http from '../../services/api';\r\nimport { saveToken, setAuthState } from './authSlice';\r\nimport { setUser } from './userSlice';\r\nimport { AuthResponse } from '../../services/mirage/routes/user';\r\nimport { useAppDispatch } from '../../store';\r\nimport Login from '../../images/user_status_isometric.png';\r\nimport Signup from '../../images/user_profile_isometric.png';\r\n\r\nconst schema = Yup.object().shape({\r\n  username: Yup.string()\r\n    .required('What? No username?')\r\n    .max(16, 'Username cannot be longer than 16 characters'),\r\n  password: Yup.string().required('Without a password, \"None shall pass!\"'),\r\n  email: Yup.string().email('Please provide a valid email address (abc@xy.z)'),\r\n});\r\n\r\nconst Auth: FC = () => {\r\n  const { handleSubmit, register, errors } = useForm<User>({\r\n    validationSchema: schema,\r\n  });\r\n\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const submitForm = (data: User) => {\r\n    const path = isLogin ? '/auth/login' : '/auth/signup';\r\n    http\r\n      .post<User, AuthResponse>(path, data)\r\n      .then((res) => {\r\n        if (res) {\r\n          const { user, token } = res;\r\n          dispatch(saveToken(token));\r\n          dispatch(setUser(user));\r\n          dispatch(setAuthState(true));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"auth\">\r\n      <div className=\"card\">\r\n        <form onSubmit={handleSubmit(submitForm)}>\r\n          <div className=\"inputWrapper\">\r\n            <h3 className=\"formtitle\">{isLogin ? 'Login' : 'SignUp'}</h3>\r\n            {isLogin ? (\r\n              <img src={Login} alt=\"Avatar\" className=\"avatar\" />\r\n            ) : (\r\n              <img src={Signup} alt=\"Avatar\" className=\"avatar\" />\r\n            )}\r\n            <input\r\n              className=\"in\"\r\n              ref={register}\r\n              name=\"username\"\r\n              placeholder=\"Username\"\r\n            />\r\n            {errors && errors.username && (\r\n              <p className=\"error\">{errors.username.message}</p>\r\n            )}\r\n          </div>\r\n          <div className=\"inputWrapper\">\r\n            <input\r\n              className=\"in\"\r\n              ref={register}\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n            />\r\n            {errors && errors.password && (\r\n              <p className=\"error\">{errors.password.message}</p>\r\n            )}\r\n          </div>\r\n\r\n          {!isLogin && (\r\n            <div className=\"inputWrapper\">\r\n              <input\r\n                ref={register}\r\n                name=\"email\"\r\n                placeholder=\"Email (optional)\"\r\n              />\r\n              {errors && errors.email && (\r\n                <p className=\"error\">{errors.email.message}</p>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"inputWrapper\">\r\n            <button className=\"bttn\" type=\"submit\" disabled={loading}>\r\n              {isLogin ? 'Login' : 'Create account'}\r\n            </button>\r\n          </div>\r\n\r\n          <h5\r\n            onClick={() => setIsLogin(!isLogin)}\r\n            style={{ cursor: 'pointer', opacity: 0.7 }}\r\n          >\r\n            <p\r\n              style={{\r\n                color: '#eee',\r\n                fontWeight: 900,\r\n                borderLeft: '4px solid #ccc',\r\n                borderRight: '4px solid #ccc',\r\n                fontSize: '1rem',\r\n              }}\r\n            >\r\n              <i className=\"fa fa-user\"></i>&nbsp;&nbsp;{isLogin ? 'No account? Create one' : 'Already have an account?'}\r\n            </p>\r\n          </h5>\r\n        </form>\r\n        <div className=\"credit typewriter\">\r\n          <p className=\"anime\">Developed By Bilal Shaikh</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"],"sourceRoot":""}